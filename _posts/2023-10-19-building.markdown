---
layout: post
title:  "First Post: Building This Website"
date:   2023-10-19 19:54:51 +0000
categories: jekyll update
---

In the midst of internship recruiting season, I wanted to build a landing page for people to get to my developer work better. I chose github pages for its hosting simplicity and jekyll for static site generation. In just a few hours, I was able to containerize my application, learn jekyll to style and structure my content, set up a simple CI/CD process, and ship.

The process was a breath of fresh air compared to framework-driven web projects I've shipped in the past and it was a neat lesson in the power of using the right technology for your use case.

<!-- You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.

Jekyll also offers powerful support for code snippets:

{% highlight ruby %}
def print_hi(name)
  puts "Hi, #{name}"
end
print_hi('Tom')
#=> prints 'Hi, Tom' to STDOUT.
{% endhighlight %}

Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/ -->

